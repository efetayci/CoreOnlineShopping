
@model CoreOnlineShopping.Models.Products
@{
    ViewData["Title"] = "Details";
}

@using CoreOnlineShopping.Utility
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{

    List<Products> products = HttpContextAccessor.HttpContext.Session.Get<List<Products>>("products");
    Products product = null;
    if (products != null)
    {
        product = products.FirstOrDefault(x => x.Id==Model.Id);
    }

}

<br />
<h2 class="text-info">Details of Product</h2>
<br />

<form asp-action="Details" method="post">
    <div class="p-4 rounded border">
        <div asp-validation-summary="ModelOnly" class="text-danger">

        </div>
        <div class="row">
            <div class="col-8">
                <div class="form-group">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="Name"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="Name" class="form-control" readonly placeholder="" />
                        </div>
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="Price"></label>
                        </div>

                        <div class="col-8">
                            <input value="@Convert.ToInt32(Model.Price)" id="Price" class="form-control" readonly />
                        </div>
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>

                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="ProductColor"></label>
                        </div>
                        <div class="col-8">
                            <input asp-for="ProductColor" class="form-control" readonly />
                        </div>
                        <span asp-validation-for="ProductColor" class="text-danger"></span>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <label> Product Type</label>
                        </div>
                        <div class="col-8">
                            <input asp-for="ProductTypesId" asp-items="ViewBag.productTypeId" class="form-control" readonly></input>
                        </div>
                        <span asp-validation-for="ProductTypesId" class="text-danger"></span>
                    </div>


                    <div class="form-group">
                        <a asp-action="Index" class="btn btn-warning">Back to List</a>
                        @if (product != null)
                        {
                            <button type="submit" class="btn btn-danger" asp-action="Remove" asp-route-id="@Model.Id">Remove to Cart</button>
                        }
                        
                        <button type="submit" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-success">Add to Cart</button>
                    </div>
                </div>
            </div>
            <div class="col-1">

            </div>
            <div class="col-3">
                <img src="@Model.Image" style="width:100%; border-radius:5px;border:1px solid #efefef" />
                @if (Model.IsAvilable)
                {
                    <img src="~/Images/instock.png" width="230px" height="100x" />
                }
                else
                {
                    <img src="~/Images/outstock.jpg" width="230px" height="80px" />
                }
            </div>

        </div>
    </div>
</form>

@*save a abstıkça validation hatası veren texte curser koyma*@
@section Scripts{
    @{await Html.RenderPartialAsync(partialViewName: "_ValidationScriptsPartial.cshtml");}
}
